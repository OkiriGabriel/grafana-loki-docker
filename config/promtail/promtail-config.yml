server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs - Simplified and Working
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ['.*']
    relabel_configs:
      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      # Extract image name
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
      # Extract container ID
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
      # Extract compose service if available
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      # Extract compose project if available
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      # Add hostname
      - target_label: 'hostname'
        replacement: 'monitoring-server'
      # Set job name
      - target_label: 'job'
        replacement: 'docker'
      # Keep all containers
      - source_labels: ['__meta_docker_container_name']
        regex: '.+'
        action: keep
    pipeline_stages:
      # Simple JSON parsing for basic Docker logs
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      # Handle timestamp
      - timestamp:
          source: time
          format: RFC3339Nano
      # Handle different log formats
      - regex:
          expression: '(?P<level>INFO|ERROR|WARN|DEBUG)'
          source: output
      - labels:
          level:
          stream:
      # Output the log message
      - output:
          source: output

  # System logs - Simplified
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          hostname: monitoring-server
          __path__: /var/log/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)'
      - labels:
          hostname:
          service:
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - output:
          source: message

  # Docker container logs via file system (backup method)
  - job_name: docker-files
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-files
          hostname: monitoring-server
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: '(?P<container_name>[^|]+)'
          source: tag
      - timestamp:
          source: time
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
      - output:
          source: output
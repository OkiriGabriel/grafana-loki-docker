server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs - Enhanced configuration
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ['.*']
    relabel_configs:
      # Keep all containers by default
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      - source_labels: ['__meta_docker_container_label_logging_level']
        target_label: 'level'
      - source_labels: ['__meta_docker_container_label_logging_app']
        target_label: 'app'
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
      # Add hostname label for multi-server monitoring
      - target_label: 'hostname'
        replacement: '${HOSTNAME}'
      # Add job label if not present
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'job'
        replacement: 'docker'
      # Keep all containers (don't drop any)
      - source_labels: ['__meta_docker_container_name']
        regex: '.+'
        action: keep
    pipeline_stages:
      # Try to parse JSON logs first
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            trace_id: trace_id
            user_id: user_id

      # Extract labels from JSON
      - labels:
          timestamp:
          level:
          service:
          trace_id:
          user_id:

      # Parse timestamp if available
      - timestamp:
          source: timestamp
          format: RFC3339Nano

      # For non-JSON logs, extract patterns
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) - (?P<message>.*)'
          source: message

      # Extract Java exception patterns
      - regex:
          expression: '(?P<exception>java\.lang\.[\w.]+Exception)'
          source: message

      # Extract error patterns
      - regex:
          expression: '(?P<error_type>failed|error|errored|Exception|ERROR)'
          source: message

      # Extract success patterns
      - regex:
          expression: '(?P<success_type>success|completed|SUCCESS)'
          source: message

      # Add labels for pattern matching
      - labels:
          exception:
          error_type:
          success_type:

      # Output the message
      - output:
          source: message

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          hostname: '${HOSTNAME}'
          __path__: /var/log/*log

  # Application logs
  - job_name: applications
    static_configs:
      - targets:
          - localhost
        labels:
          job: app-logs
          hostname: '${HOSTNAME}'
          __path__: /var/log/applications/*.log

  # Custom log paths for your applications
  - job_name: remittance-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: remittance
          product: remittance
          hostname: '${HOSTNAME}'
          __path__: /var/log/remittance/*.log

  - job_name: collection-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: collection
          product: collection
          hostname: '${HOSTNAME}'
          __path__: /var/log/collection/*.log

  - job_name: agency-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: agency
          product: agency
          hostname: '${HOSTNAME}'
          __path__: /var/log/agency/*.log

  # Nginx logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          hostname: '${HOSTNAME}'
          __path__: /var/log/nginx/*.log

  # Apache logs
  - job_name: apache
    static_configs:
      - targets:
          - localhost
        labels:
          job: apache
          hostname: '${HOSTNAME}'
          __path__: /var/log/apache2/*.log

  # Docker events (for container lifecycle monitoring)
  - job_name: docker-events
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-events
          hostname: '${HOSTNAME}'
          __path__: /var/lib/docker/containers/*/*-json.log

 
groups:
  - name: docker-container-lifecycle
    rules:
      # Container Down - Not seen in metrics for over 1 minute
      - alert: ContainerDown
        expr: absent(docker_container_info{name=~".+"}) or (time() - docker_container_info) > 60
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container has not been seen for over 1m ‚Äî it may have exited or crashed"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "üö® CRITICAL: ContainerDown"
          description: "Container {{ $labels.name }} has not been seen for over 1m ‚Äî it may have exited or crashed on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Exited/Stopped
      - alert: ContainerExited
        expr: docker_container_state{state="exited"} == 1
        for: 30s
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container has exited or stopped"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "üö® CRITICAL: ContainerExited"
          description: "Container {{ $labels.name }} has exited/stopped on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Not Running (but not exited - likely restarting)
      - alert: ContainerNotRunning
        expr: docker_container_state{state="running"} == 0 and docker_container_state{state="exited"} == 0
        for: 2m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container is not running and not exited - likely restarting"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ContainerNotRunning"
          description: "Container {{ $labels.name }} is neither running nor exited (likely restarting) on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Exit Code Non-Zero
      - alert: ContainerExitedWithError
        expr: docker_container_exit_code != 0
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container exited with non-zero exit code"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "üö® CRITICAL: ContainerExitedWithError"
          description: "Container {{ $labels.name }} exited with non-zero exit code {{ $value }} on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Started (Optional - for monitoring container lifecycle)
      - alert: ContainerStarted
        expr: increase(docker_container_start_time_seconds[1m]) > 0
        for: 0s
        labels:
          severity: info
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container has been started"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ÑπÔ∏è INFO: ContainerStarted"
          description: "Container {{ $labels.name }} has been started on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Created (Optional - for monitoring new container creation)
      - alert: ContainerCreated
        expr: increase(docker_container_created_seconds[1m]) > 0
        for: 0s
        labels:
          severity: info
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "New container has been created"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ÑπÔ∏è INFO: ContainerCreated"
          description: "New container {{ $labels.name }} has been created on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container Restarting Frequently
      - alert: ContainerRestarting
        expr: increase(docker_container_start_time_seconds[15m]) > 5
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container is restarting frequently"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ContainerRestarting"
          description: "Container {{ $labels.name }} has restarted more than 5 times in the last 15 minutes on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

  - name: docker-container-resources
    rules:
      # Container High Memory Usage
      - alert: ContainerHighMemoryUsage
        expr: (docker_container_memory_usage_bytes / docker_container_memory_limit_bytes * 100) > 85
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container is using more than 85% of memory limit"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ContainerHighMemoryUsage"
          description: "Container {{ $labels.name }} is using more than 85% of memory limit on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container High CPU Usage
      - alert: ContainerHighCPUUsage
        expr: rate(docker_container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container is using more than 80% CPU"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ContainerHighCPUUsage"
          description: "Container {{ $labels.name }} is using more than 80% CPU on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

      # Container High Disk I/O
      - alert: ContainerHighDiskIO
        expr: rate(docker_container_fs_reads_total[5m]) + rate(docker_container_fs_writes_total[5m]) > 1000
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.name }}"
          description: "Container has high disk I/O activity"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ContainerHighDiskIO"
          description: "Container {{ $labels.name }} has high disk I/O activity on host {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

  - name: docker-service-health
    rules:
      # Service Down (for non-container services)
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.job }}"
          host: "{{ $labels.instance }}"
          application: "{{ $labels.job }}"
          description: "Service is down"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{job=\\\"{{ $labels.job }}\\\"}\"}]"
        annotations:
          summary: "üö® CRITICAL: ServiceDown"
          description: "Service {{ $labels.job }} on {{ $labels.instance }} has been down for more than 1 minute"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{job=\\\"{{ $labels.job }}\\\"}\"}]"

  - name: docker-business-failures
    rules:
      # Failed Transactions - Remittance
      - alert: RemittanceTransactionFailures
        expr: rate(remittance_transactions_total{status="failed"}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
          team: business
          product: remittance
          type: transaction_failure
        annotations:
          summary: "High remittance transaction failures"
          description: "Remittance service is experiencing {{ $value }} failed transactions per second"

      # Failed Transactions - Collection
      - alert: CollectionTransactionFailures
        expr: rate(collection_transactions_total{status="failed"}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
          team: business
          product: collection
          type: transaction_failure
        annotations:
          summary: "High collection transaction failures"
          description: "Collection service is experiencing {{ $value }} failed transactions per second"

      # Failed Transactions - Agency Banking
      - alert: AgencyTransactionFailures
        expr: rate(agency_transactions_total{status="failed"}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
          team: business
          product: agency
          type: transaction_failure
        annotations:
          summary: "High agency banking transaction failures"
          description: "Agency banking service is experiencing {{ $value }} failed transactions per second"

      # API Error Rate High
      - alert: APIErrorRateHigh
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) * 100 > 10
        for: 3m
        labels:
          severity: warning
          team: services
          type: api_error
        annotations:
          summary: "High API error rate for {{ $labels.service }}"
          description: "API error rate is {{ $value }}% for {{ $labels.service }}"

      # Database Connection Failures
      - alert: DatabaseConnectionFailures
        expr: rate(database_connection_failures_total[5m]) > 0
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          type: database
        annotations:
          summary: "Database connection failures detected"
          description: "Database connection failures are occurring at {{ $value }} per second"

  - name: docker-application-health
    rules:
      # Recording rule for memory leak detection
      - record: container_memory_increase_mb
        expr: increase(container_memory_usage_bytes[1h]) / 1024 / 1024

      # Application Health Check Failed
      - alert: ApplicationHealthCheckFailed
        expr: up{job="application-health"} == 0
        for: 1m
        labels:
          severity: critical
          team: services
          type: application_health
        annotations:
          summary: "Application health check failed for {{ $labels.instance }}"
          description: "Application health check endpoint is not responding"

      # Application Response Time High
      - alert: ApplicationResponseTimeHigh
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          team: services
          type: performance
        annotations:
          summary: "High application response time for {{ $labels.service }}"
          description: "95th percentile response time is {{ $value }} seconds"

      # Application Memory Leak
      - alert: ApplicationMemoryLeak
        expr: container_memory_increase_mb > 50
        for: 10m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.name }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.name }}"
          description: "Container memory usage increased significantly in the last hour"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: ApplicationMemoryLeak"
          description: "Container {{ $labels.name }} memory usage increased by {{ $value | printf \"%.1f\" }} MB in the last hour on host {{ $labels.hostname }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.name }}\\\"}\"}]"

  - name: docker-infrastructure
    rules:
      # Docker Daemon Issues
      - alert: DockerDaemonDown
        expr: up{job="docker"} == 0
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          type: docker_daemon
        annotations:
          summary: "Docker daemon is down on {{ $labels.instance }}"
          description: "Docker daemon is not responding on {{ $labels.instance }}"

      # Docker Disk Space Low
      - alert: DockerDiskSpaceLow
        expr: (node_filesystem_avail_bytes{mountpoint="/var/lib/docker"} / node_filesystem_size_bytes{mountpoint="/var/lib/docker"} * 100) < 10
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          type: disk_space
        annotations:
          summary: "Low disk space for Docker on {{ $labels.instance }}"
          description: "Docker disk space is below 10% on {{ $labels.instance }}"

      # Too Many Containers
      - alert: TooManyContainers
        expr: count(container_cpu_usage_seconds_total) > 50
        for: 5m
        labels:
          severity: warning
          team: infrastructure
          container: "system-wide"
          host: "{{ $labels.instance }}"
          application: "docker-system"
          description: "Too many containers running on the system"
          url: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{job=\\\"docker\\\"}\"}]"
        annotations:
          summary: "‚ö†Ô∏è WARNING: TooManyContainers"
          description: "More than 50 containers are running on {{ $labels.instance }}"
          logs: "https://grafana.example.com/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{job=\\\"docker\\\"}\"}]" 
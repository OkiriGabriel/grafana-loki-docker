groups:
  - name: log-monitoring
    rules:
      # Recording rule for HTTP error logs (401, 403, 404, 500, 501, 502, 503)
      - record: log_http_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*401.*|.*403.*|.*404.*|.*500.*|.*501.*|.*502.*|.*503.*"}[5m]))

      # Recording rule for general error logs
      - record: log_general_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*error.*|.*ERROR.*|.*failed.*|.*FAILED.*|.*exception.*|.*EXCEPTION.*|.*timeout.*|.*TIMEOUT.*|.*connection refused.*|.*CONNECTION REFUSED.*"}[5m]))

      # Recording rule for authentication errors
      - record: log_auth_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*401.*|.*403.*|.*unauthorized.*|.*UNAUTHORIZED.*|.*forbidden.*|.*FORBIDDEN.*|.*authentication.*failed.*|.*AUTHENTICATION.*FAILED.*"}[5m]))

      # Recording rule for server errors
      - record: log_server_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*500.*|.*502.*|.*503.*|.*504.*|.*505.*|.*internal.*server.*error.*|.*INTERNAL.*SERVER.*ERROR.*"}[5m]))

      # Recording rule for client errors
      - record: log_client_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*400.*|.*404.*|.*405.*|.*406.*|.*408.*|.*409.*|.*410.*|.*411.*|.*412.*|.*413.*|.*414.*|.*415.*|.*416.*|.*417.*|.*418.*|.*422.*|.*423.*|.*424.*|.*425.*|.*426.*|.*428.*|.*429.*|.*431.*|.*451.*"}[5m]))

      # Recording rule for Docker-specific errors
      - record: log_docker_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*docker.*error.*|.*DOCKER.*ERROR.*|.*container.*failed.*|.*CONTAINER.*FAILED.*|.*image.*pull.*failed.*|.*IMAGE.*PULL.*FAILED.*|.*no.*such.*container.*|.*NO.*SUCH.*CONTAINER.*|.*permission.*denied.*|.*PERMISSION.*DENIED.*|.*port.*already.*in.*use.*|.*PORT.*ALREADY.*IN.*USE.*|.*bind.*address.*already.*in.*use.*|.*BIND.*ADDRESS.*ALREADY.*IN.*USE.*|.*network.*not.*found.*|.*NETWORK.*NOT.*FOUND.*|.*volume.*not.*found.*|.*VOLUME.*NOT.*FOUND.*|.*exec.*failed.*|.*EXEC.*FAILED.*|.*exit.*code.*[1-9][0-9]*|.*EXIT.*CODE.*[1-9][0-9]*"}[5m]))

      # Recording rule for application startup errors
      - record: log_startup_errors_total
        expr: sum by (container, hostname, job) (increase(log_entries_total{message=~".*failed.*to.*start.*|.*FAILED.*TO.*START.*|.*startup.*failed.*|.*STARTUP.*FAILED.*|.*initialization.*failed.*|.*INITIALIZATION.*FAILED.*|.*bootstrap.*failed.*|.*BOOTSTRAP.*FAILED.*|.*application.*failed.*to.*start.*|.*APPLICATION.*FAILED.*TO.*START.*"}[5m]))

      # Alert for critical HTTP errors
      - alert: ContainerLogCriticalHTTPErrors
        expr: log_http_errors_total > 5
        for: 2m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Critical HTTP errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogCriticalHTTPErrors"
          description: "Container {{ $labels.container }} is logging critical HTTP errors (401, 403, 404, 500, 501, 502, 503) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for general errors
      - alert: ContainerLogGeneralErrors
        expr: log_general_errors_total > 10
        for: 3m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "General errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "⚠️ WARNING: ContainerLogGeneralErrors"
          description: "Container {{ $labels.container }} is logging general errors (error, failed, exception, timeout, connection refused) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for authentication errors
      - alert: ContainerLogAuthErrors
        expr: log_auth_errors_total > 3
        for: 2m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Authentication errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogAuthErrors"
          description: "Container {{ $labels.container }} is logging authentication errors (401, 403, unauthorized, forbidden) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for server errors
      - alert: ContainerLogServerErrors
        expr: log_server_errors_total > 3
        for: 2m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Server errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogServerErrors"
          description: "Container {{ $labels.container }} is logging server errors (500, 502, 503, 504, 505, internal server error) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for client errors
      - alert: ContainerLogClientErrors
        expr: log_client_errors_total > 10
        for: 3m
        labels:
          severity: warning
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Client errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "⚠️ WARNING: ContainerLogClientErrors"
          description: "Container {{ $labels.container }} is logging client errors (4xx status codes) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for Docker-specific errors
      - alert: ContainerLogDockerErrors
        expr: log_docker_errors_total > 2
        for: 2m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Docker-specific errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogDockerErrors"
          description: "Container {{ $labels.container }} is logging Docker-specific errors (container failures, image pull failures, permission issues, network issues) on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for application startup errors
      - alert: ContainerLogStartupErrors
        expr: log_startup_errors_total > 1
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "Application startup errors detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogStartupErrors"
          description: "Container {{ $labels.container }} is logging application startup errors on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"

      # Alert for high error rate
      - alert: ContainerLogHighErrorRate
        expr: rate(log_general_errors_total[1m]) > 20
        for: 1m
        labels:
          severity: critical
          team: infrastructure
          container: "{{ $labels.container }}"
          host: "{{ $labels.hostname }}"
          application: "{{ $labels.job }}"
          description: "High error rate detected in container logs"
          url: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]"
        annotations:
          summary: "🚨 CRITICAL: ContainerLogHighErrorRate"
          description: "Container {{ $labels.container }} is logging errors at a high rate on host {{ $labels.hostname }}"
          logs: "http://localhost:3000/explore?left=[\"now-5m\",\"now\",\"Loki\",{\"expr\":\"{container=\\\"{{ $labels.container }}\\\"}\"}]" 